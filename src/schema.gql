# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  _id: String!
  name: String!
  email: String!
  avatar: String
  role: roles
  bio: String!
  following: [User!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum roles {
  NORMAL_USER
  GOLD_USER
  VERIFYED_USER
  SUPER_USER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserInfoDto {
  _id: String
  name: String
  email: String
  avatar: String
  role: roles
  bio: String
  following: [User!]
  createdAt: DateTime
  updatedAt: DateTime
  followers: [User!]!
}

type Post {
  _id: String!
  body: String!
  image: String
  author: User!
  likers: [User!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Comment {
  _id: String!
  postId: Post!
  body: String!
  author: User!
  voteUp: [User!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  accountInfo(userId: String!): UserInfoDto
  user(id: Int!): User!
  findPost(getPostsInputs: GetPostsInputs!): [Post!]!
  relatedPost(paginationInputs: PaginationInput!): [Post!]!
  onePost(postId: String!): Post!
  getPostComments(input: GetCommentInput!): [Comment!]!
}

input GetPostsInputs {
  page: Int
  pageSize: Int
  userId: String
  searchText: String
}

input PaginationInput {
  page: Int
  pageSize: Int
}

input GetCommentInput {
  postId: String!
  page: Float
  pageSize: Float
}

type Mutation {
  followAndUnfollow(userId: String!): String!
  removeUser(id: Int!): User!
  likeAndDislike(postId: String!): String!
  createComment(input: CreateCommentInput!): Comment!
  voteComment(commentId: String!): String!
}

input CreateCommentInput {
  postId: String!
  body: String!
}